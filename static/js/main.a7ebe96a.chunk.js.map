{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","className","type","placeholder","value","Button","color","text","onClick","style","backgroundColor","defaultProps","Header","title","console","log","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","App","useState","setTasks","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAqBeA,EArBC,WACZ,OACI,uBAAMC,UAAY,WAAlB,UACI,sBAAKA,UAAU,eAAf,UACI,yCACA,uBAAOC,KAAO,OAAOC,YAAc,gBAEvC,sBAAKF,UAAU,eAAf,UACI,+CACA,uBAAOC,KAAO,OAAOC,YAAc,sBAEvC,sBAAKF,UAAU,eAAf,UACI,iDACA,uBAAOC,KAAO,gBAElB,uBAAOA,KAAO,SAASE,MAAM,kBCZnCC,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAE3B,OACA,wBACAA,QAASA,EACTC,MAAS,CAAEC,gBAAiBJ,GAC5BL,UAAY,MAHZ,SAKKM,KAKTF,EAAOM,aAAe,CAClBL,MAAO,aAUID,QCvBTO,EAAS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAId,OACI,yBAAQZ,UAAY,SAApB,UACI,6BAAKY,IACL,cAAC,EAAD,CAAQP,MAAQ,QAAQC,KAAO,MAAMC,QAN7B,WACZM,QAAQC,IAAI,gBAUpBH,EAAOD,aAAe,CAClBE,MAAO,gBAQID,Q,OCTAI,EAdF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAC5B,OACI,sBAAKlB,UAAS,eAAYgB,EAAKG,SAAW,WAAa,IACtDC,cAAiB,kBAAMF,EAASF,EAAKK,KADtC,UAEI,+BACKL,EAAKV,KADV,IACgB,cAAC,IAAD,CAASE,MAAS,CAAEH,MAAO,MAAOiB,OAAQ,WACtDf,QAAW,kBAAMU,EAASD,EAAKK,UAEnC,4BAAIL,EAAKO,UCONC,EAdD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOR,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAE9B,OACI,mCACGO,EAAMC,KAAI,SAACV,GAAD,OACP,cAAC,EAAD,CAAsBA,KAAQA,EAC9BC,SAAYA,EACZC,SAAYA,GAFCF,EAAKK,UCsDjBM,MAtDf,WAAgB,IAAD,EACaC,mBAAS,CACjC,CACIP,GAAI,EACJf,KAAM,sBACNiB,IAAK,oBACLJ,UAAU,GAEd,CACIE,GAAI,EACJf,KAAM,oBACNiB,IAAK,oBACLJ,UAAU,GAEd,CACIE,GAAI,EACJf,KAAM,gBACNiB,IAAK,oBACLJ,UAAU,KAlBH,mBACNM,EADM,KACCI,EADD,KAmCb,OAEE,sBAAK7B,UAAU,YAAf,UAEE,cAAC,EAAD,IACCyB,EAAMK,OAAS,EAChB,cAAC,EAAD,CAAOL,MAASA,EAAOR,SAlBN,SAACI,GAClBQ,EAASJ,EAAMM,QAAO,SAACf,GAAD,OAAUA,EAAKK,KAAOA,OAiBGH,SAb1B,SAACG,GACtBQ,EAASJ,EAAMC,KAAI,SAACV,GAAD,OACnBA,EAAKK,KAAOA,EAAZ,2BAAqBL,GAArB,IAA2BG,UAC1BH,EAAKG,WAAYH,SAYhB,oBAGH,cAAC,EAAD,QC1CUgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a7ebe96a.chunk.js","sourcesContent":["const AddTask = () => {\r\n    return (\r\n        <form className = 'add-form'>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input type = 'text' placeholder = 'Add Task' />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Day & Time</label>\r\n                <input type = 'text' placeholder = 'Add Day & Time' />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Set Reminder</label>\r\n                <input type = 'checkbox' />\r\n            </div>\r\n            <input type = \"submit\" value=\"Save Task\" />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n\r\n    return (\r\n    <button \r\n    onClick={onClick}\r\n    style = {{ backgroundColor: color }} \r\n    className = 'btn'\r\n    >\r\n        {text}\r\n    </button>\r\n    );\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\n\r\n\r\nconst Header = ({ title }) => {\r\n    const onClick = () => {\r\n        console.log('Click')\r\n    }\r\n    return (\r\n        <header className = \"header\"> \r\n            <h1>{title}</h1>\r\n            <Button color = 'green' text = 'Add' onClick= {onClick} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className = {`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n         onDoubleClick = {() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text} <FaTimes style = {{ color: 'red', cursor: 'pointer' }}\r\n                onClick = {() => onDelete(task.id)} />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n   \r\n    return (\r\n        <>\r\n          {tasks.map((task) => (\r\n              <Task key = {task.id} task = {task} \r\n              onDelete = {onDelete}\r\n              onToggle = {onToggle} />\r\n              \r\n          ))}  \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\nimport AddTask from './components/AddTask';\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\n\n\n\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2-30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at school',\n        day: 'Feb 6th at 1-30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 7th at 1-30pm',\n        reminder: false,\n    },\n    ]);\n\n    //Delete Task\n    const deleteTask = (id) => {\n      setTasks(tasks.filter((task) => task.id !== id));\n    };\n\n    //Toggle Reminder\n    const toggleReminder = (id) => {\n      setTasks(tasks.map((task) => \n      task.id === id ? {...task, reminder:\n      !task.reminder} : task\n      ));\n    };\n    \n  return (\n\n    <div className=\"container\">\n      \n      <Header />\n      {tasks.length > 0 ? (\n      <Tasks tasks = {tasks} onDelete = {deleteTask} onToggle = {toggleReminder} /> \n      ) : (\n        \"No Tasks to Show!\"\n      )}\n\n     <AddTask />\n    \n    </div>\n    \n );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}